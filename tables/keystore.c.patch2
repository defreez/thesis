@@ -1667,6 +1684,8 @@
 decrypt_passphrase_encrypted_session_key(struct ecryptfs_auth_tok *auth_tok,
 					 struct ecryptfs_crypt_stat
*crypt_stat)
 {
+	struct ecryptfs_boundary_key *boundary_key;
+	u8 decryption_key[16];
 	struct scatterlist dst_sg[2];
 	struct scatterlist src_sg[2];
 	struct mutex *tfm_mutex;
@@ -1675,13 +1694,19 @@
 	};
 	int rc = 0;
 
+	ecryptfs_printk(KERN_DEBUG, "uid: %d", (int) crypt_stat->boundary_uid);
+	if (!ecryptfs_find_boundary_key(crypt_stat->mount_crypt_stat, 
+				   crypt_stat->boundary_uid, &boundary_key)) 
+	{
+		ecryptfs_generate_boundary_key(crypt_stat,
+					       auth_tok, &boundary_key);
+	}
+	memcpy(decryption_key, boundary_key->key, crypt_stat->key_size);
+
 	if (unlikely(ecryptfs_verbosity > 0)) {
 		ecryptfs_printk(
-			KERN_DEBUG, "Session key encryption key (size
			[%d]):\n",
-			auth_tok->token.password.session_key_encryption_key_bytes);
-		ecryptfs_dump_hex(
-			auth_tok->token.password.session_key_encryption_key,
-			auth_tok->token.password.session_key_encryption_key_bytes);
+			KERN_DEBUG, "Session key encryption key:\n")
+		ecryptfs_dump_hex(decryption_key, crypt_stat->key_size);
 	}
 	rc = ecryptfs_get_tfm_and_mutex_for_cipher_name(&desc.tfm, &tfm_mutex,
 							crypt_stat->cipher);
@@ -1715,7 +1740,7 @@
 	}
 	mutex_lock(tfm_mutex);
 	rc = crypto_blkcipher_setkey(
-		desc.tfm, auth_tok->token.password.session_key_encryption_key,
+		desc.tfm, decryption_key,
 		crypt_stat->key_size);
 	if (unlikely(rc < 0)) {
 		mutex_unlock(tfm_mutex);
